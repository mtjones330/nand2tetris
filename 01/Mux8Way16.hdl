// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {

    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:

    Not (in=sel[2], out=notSel2);
    Not (in=sel[1], out=notSel1);
    Not (in=sel[0], out=notSel0);

    And (a=notSel1, b=notSel0, out=groupA);
    And (a=notSel1, b=sel[0], out=groupB);
    And (a=sel[1], b=notSel0, out=groupC);
    And (a=sel[1], b=sel[0], out=groupD);

    And(a=notSel2, b = groupA, out=selA);
    And(a=notSel2, b = groupB, out=selB);
    And(a=notSel2, b = groupC, out=selC);
    And(a=notSel2, b = groupD, out=selD);
    And(a=sel[2], b = groupA, out=selE);
    And(a=sel[2], b = groupB, out=selF);
    And(a=sel[2], b = groupC, out=selG);
    And(a=sel[2], b = groupD, out=selH);

    Mux16 (a[0..15]=false, b=a, sel=selA, out=muxA);
    Mux16 (a[0..15]=false, b=b, sel=selB, out=muxB);
    Mux16 (a[0..15]=false, b=c, sel=selC, out=muxC);
    Mux16 (a[0..15]=false, b=d, sel=selD, out=muxD);
    Mux16 (a[0..15]=false, b=e, sel=selE, out=muxE);
    Mux16 (a[0..15]=false, b=f, sel=selF, out=muxF);
    Mux16 (a[0..15]=false, b=g, sel=selG, out=muxG);
    Mux16 (a[0..15]=false, b=h, sel=selH, out=muxH);

    Or16 (a=muxA, b=muxB, out=outB);
    Or16 (a=outB, b=muxC, out=outC);
    Or16 (a=outC, b=muxD, out=outD);
    Or16 (a=outD, b=muxE, out=outE);
    Or16 (a=outE, b=muxF, out=outF);
    Or16 (a=outF, b=muxG, out=outG);
    Or16 (a=outG, b=muxH, out=out);
}
